# Events are formatted as follows:
# Title: [type name] [class name]( | [location name])

# Required names:
# - full
# default field: if true, the frontend checkbox is checked by default
# classes can attach to an event_type by adding a "type" property with a valid event_type code as a value.
event_type:
  - full_name: "Créneaux généraux LV1"
    code: "general_lang1"
    default: false
  - full_name: "Créneaux généraux LV2"
    code: "general_lang2"
    default: false
  - full_name: "Créneaux généraux sport"
    code: "general_sport"
    default: true
  - full_name: "Langues"
    code: "lang"
    default: true
  - full_name: "Sport"
    code: "sport"
    default: true
  - full_name: "Humanités"
    code: "huma"
    default: true
  - full_name: "Soutien"
    code: "support"
    default: true
  - full_name: "FIMI : P2I"
    code: "p2i"
    default: true
  - full_name: "Évènements non reconnus et créneaux groupes"
    code: "other"
    default: true
  - full_name: "Évènements classiques"
    code: "*"
    default: true

# Required names:
# - explicit (used in the frontend, must not be empty)
# - full
# - short
# Available variable inside names:
# - %MATCHED_TYPE (matched type regex, add _i to get the match group n°i)
# - %DETAILS% (class details)
# Available regexes to match locations (work in conjunction):
# - type_regex (over location)
# - subject_regex (over class full subject)
# - details_regex (over class details)
types:
  - explicit_name: "Créneau Groupe"
    full_name: ""
    short_name: ""
    code: "group"
    subject_regex: "^Créneau Groupe$"
  - explicit_name: "TD"
    full_name: "Travail Dirigé"
    short_name: "TD"
    code: "td"
    type_regex: "^TD$"
  - explicit_name: "CM"
    full_name: "Cour Magistral"
    short_name: "CM"
    code: "cm"
    type_regex: "^CM$"
  - explicit_name: "TP"
    full_name: "Travail Pratique"
    short_name: "TP"
    code: "tp"
    type_regex: "^TP$"
  - explicit_name: "Évaluation"
    full_name: "Évaluation"
    short_name: "EV"
    code: "ev"
    type_regex: "^EV$"
  - explicit_name: "Soutien"
    full_name: "Soutien"
    short_name: "Soutien"
    code: "soutien"
    type_regex: "^TA$"

# Required names:
# - full
# - short
# Available variable inside names:
# - %MATCHED_LOCATION% (matched location regex, add _i to get the match group n°i)
# - %MATCHED_DETAILS% (matched details regex, add _i to get the match group n°i)
# - %DETAILS% (class details)
# Available regexes to match locations (work in conjunction):
# - location_regex (over location)
# - subject_regex (over class full subject)
# - details_regex (over class details)
locations:
  - full_name: "Amphithéâtre Jean Capelle"
    short_name: "Amphi Capelle"
    details_regex: "Amphi Capelle"
    # "503.001 - Amphithéâtre Gaston Berger" => "Amphi Berger"
  - full_name: "Amphithéâtre %MATCHED_LOCATION_2% %MATCHED_LOCATION_3%"
    short_name: "Amphi %MATCHED_LOCATION_3%"
    location_regex: "^(?:[0-9.a-zA-Z]+\\s-\\sAmphithéâtre\\s[A-Za-zÀ-ÿ]+)(\\s[A-Za-zÀ-ÿ]+)$"
    # "503001 - Amphithéâtre Émilie du Châtelet" => "Amphi Émilie du Châtelet"
  - full_name: "Amphithéâtre %MATCHED_LOCATION_2%"
    short_name: "Amphi %MATCHED_LOCATION_2%"
    location_regex: "^(?:[0-9.a-zA-Z]+\\s-\\sAmphithéâtre)(.+)$$"
    # "503.001 - Amphi Gaston Berger" => "Amphi Berger"
  - full_name: "Amphithéâtre %MATCHED_LOCATION_2% %MATCHED_LOCATION_3%"
    short_name: "Amphi %MATCHED_LOCATION_3%"
    location_regex: "^(?:[0-9.a-zA-Z]+\\s-\\sAmphithéâtre\\s[A-Za-zÀ-ÿ]+)(\\s[A-Za-zÀ-ÿ]+)$"
    # "301-01-02_CMXL" => "Amphi Seguin"
  - full_name: "Amphithéâtre Marc Seguin"
    short_name: "Amphi Seguin"
    location_regex: "^301-01-02_CMXL$"
    # Other locations
  - full_name: "%MATCHED_LOCATION_2%"
    short_name: "%MATCHED_LOCATION_2%"
    location_regex: "^(?:^[0-9.]+\\s-\\s)(.+)$"

# Available names:
# - full
# - short
# - code
# Available variable inside names:
# - %MATCHED_GROUP% (matched group regex, add _i to get the match group n°i)
# - %MATCHED_CLASS% (matched class regex, add _i to get the match group n°i)
# - %MATCHED_DETAILS% (matched details regex, add _i to get the match group n°i)
# - %DETAILS% (class details)
# Available regexes to match class groups:
# - group_regex (over Department:Year:Semester:Group)
# Available regexes to match classes (work in conjunction):
# - class_regex (over SubjectTag:Type)
# - subject_regex (over class full subject)
# - details_regex (over class details)
class_groups:
  - name: "FIMI"
    group_regex: "^FIMI(?=:.*)"
    classes:
      - full_name: "Physique"
        short_name: "Physique"
        code_name: "PH"
        class_regex: "^PH(?=[-:]|$)"
      - full_name: "Mathématiques"
        short_name: "Maths"
        code_name: "MA"
        class_regex: "^MA(?=[-:]|$)"
      - full_name: "Conception"
        short_name: "Concep"
        code_name: "CO|CP"
        class_regex: "^(CO|CP)(?=[-:]|$)"
      - full_name: "Chimie"
        short_name: "Chimie"
        code_name: "CH"
        class_regex: "^CH(?=[-:]|$)"
      - full_name: "Thermodynamique"
        short_name: "Thermo"
        code_name: "TH"
        class_regex: "^TH(?=[-:]|$)"
      - full_name: "Mécanique"
        short_name: "Méca"
        code_name: "MS"
        class_regex: "^MS(?=[-:]|$)"
      - full_name: "Anglais"
        short_name: "Anglais"
        code_name: "ANG"
        type: "general_lang"
        class_regex: "^ANG(?=[-:]|$)"
      - full_name: "Sport"
        short_name: "Sport"
        code_name: "EPS"
        type: "general_sport"
        class_regex: "^EPS(?=[-:]|$)"
      - full_name: "P2I"
        short_name: "P2I"
        code_name: "P2I"
        type: "p2i"
        class_regex: "^\\*:EDT$"
        details_regex: "^Créneau P2i$"
      - full_name: "%DETAILS%"
        short_name: "%DETAILS%"
        code_name: "%DETAILS%"
        type: "other"
        class_regex: "^\\*:EDT$"

  - name: "GEn"
    group_regex: "^GEN(?=:.*)"
    classes:
      - full_name: "Outils mathématiques et numériques"
        short_name: "Maths"
        code_name: "MATH"
        class_regex: "^MATH(?=[-:]|$)"
      - full_name: "Conduction"
        short_name: "Conduct."
        code_name: "COND"
        class_regex: "^COND(?=[-:]|$)"
      - full_name: "Transferts thermiques couplés"
        short_name: "TTC"
        code_name: "TTC"
        class_regex: "^TTC(?=[-:]|$)"
      - full_name: "Environnement : enjeux, concepts et outils"
        short_name: "Enviro"
        code_name: "ENVI"
        class_regex: "^ENVI(?=[-:]|$)"
      - full_name: "GEn Equipe Projet Interdisciplinaire"
        short_name: "GEnEPI"
        code_name: "GEPI"
        class_regex: "^GEPI(?=[-:]|$)"
      - full_name: "Convection thermique"
        short_name: "Convection"
        code_name: "CONV"
        class_regex: "^CONV(?=[-:]|$)"
      - full_name: "Mécanique des fluides"
        short_name: "Méca Flu"
        code_name: "MFLU"
        class_regex: "^MFLU(?=[-:]|$)"
      - full_name: "Système climatique et énergie"
        short_name: "Syst. Climat. En."
        code_name: "SEC"
        class_regex: "^SEC(?=[-:]|$)"
      - full_name: "Transfert thermique par rayonnement"
        short_name: "Rayonnement"
        code_name: "RAY"
        class_regex: "^RAY(?=[-:]|$)"
      - full_name: "Statistiques"
        short_name: "Stats"
        code_name: "STAT"
        class_regex: "^STAT(?=[-:]|$)"
      - full_name: "Qualité des milieux"
        short_name: "Qualité des milieux"
        code_name: "QM"
        class_regex: "^QM(?=[-:]|$)"
      - full_name: "Thermodynamique générale"
        short_name: "Thermo"
        code_name: "THMO"
        class_regex: "^THMO(?=[-:]|$)"
      - full_name: "Commande des procédés"
        short_name: "Commande"
        code_name: "CDP"
        class_regex: "^CDP(?=[-:]|$)"
      - full_name: "Traitements des déchets solides"
        short_name: "Trait. déchets solides"
        code_name: "TDS"
        class_regex: "^TDS(?=[-:]|$)"
      - full_name: "Hydraulique"
        short_name: "Hydraulique"
        code_name: "HYDR"
        class_regex: "^HYDR(?=[-:]|$)"
      - full_name: "Mesures Physiques"
        short_name: "Mesures Physiques"
        code_name: "MPHY"
        class_regex: "^MPHY(?=[-:]|$)"
      - full_name: "Traitement des effluents liquides et gazeux"
        short_name: "Traitement des effluents"
        code_name: "EFF"
        class_regex: "^EFF(?=[-:]|$)"
      - full_name: "Algèbre linéaire pour l'ingénieur"
        short_name: "ALI"
        code_name: "ALI"
        class_regex: "^ALI(?=[-:]|$)"
      - full_name: "Séminaire environnement"
        short_name: "Séminaire enviro"
        code_name: "SENV"
        class_regex: "^SENV(?=[-:]|$)"
      - full_name: "Monde numérique"
        short_name: "Monde num"
        code_name: "MNUM"
        class_regex: "^MNUM(?=[-:]|$)"
      - full_name: "Modélisation multiphysique"
        short_name: "Mod. Multiphysique"
        code_name: "MOD"
        class_regex: "^MOD(?=[-:]|$)"
      - full_name: "Transfert de matière"
        short_name: "Transfert de matière"
        code_name: "TMAT"
        class_regex: "^TMAT(?=[-:]|$)"
      - full_name: "Langue Vivante 1"
        short_name: "LV1"
        code_name: "LV1"
        type: "general_lang1"
        class_regex: "^LV1(?=[-:]|$)"
      - full_name: "Langue Vivante 2"
        short_name: "LV2"
        code_name: "LV2"
        type: "general_lang2"
        class_regex: "^LV2(?=[-:]|$)"
      - full_name: "Éducation Physique et Sportive"
        short_name: "EPS"
        code_name: "EPS"
        type: "general_sport"
        class_regex: "^EPS(?=[-:]|$)"
      - full_name: "%DETAILS%"
        short_name: "%DETAILS%"
        code_name: "%DETAILS%"
        type: "support"
        class_regex: "^\\*:EDT$"

  - name: "IF"
    group_regex: "^IF(?=:.*)"
    classes:
      - full_name: "Architecture des circuits numériques"
        short_name: "Archi Circuit"
        code_name: "AC"
        class_regex: "^AC(?=[-:]|$)"
      - full_name: "Architecture des ordinateurs"
        short_name: "Archi Ordi"
        code_name: "AO"
        class_regex: "^AO(?=[-:]|$)"
      - full_name: "Programmation en C"
        short_name: "Prog C"
        code_name: "PRC"
        class_regex: "^PRC(?=[-:]|$)"
      - full_name: "Algorithmes et structures de données"
        short_name: "Algo"
        code_name: "ALGO"
        class_regex: "^ALGO(?=[-:]|$)"
      - full_name: "Programmation Orientée Objet - C++ - Les Bases"
        short_name: "C++ Bases"
        code_name: "POO1"
        class_regex: "^POO1(?=[-:]|$)"
      - full_name: "Programmation Orientée Objet - C++ - Avancée"
        short_name: "C++ Avancé"
        code_name: "POO2"
        class_regex: "^POO2(?=[-:]|$)"
      - full_name: "Outils de Programmation"
        short_name: "Outils Prog"
        code_name: "OP"
        class_regex: "^OP(?=[-:]|$)"
      - full_name: "Calcul matriciel et synthèse d'images"
        short_name: "Calcul matriciel"
        code_name: "CMSI"
        class_regex: "^CMSI(?=[-:]|$)"
      - full_name: "Traitement du Signal et des Images"
        short_name: "Traitement du signal"
        code_name: "TSI"
        class_regex: "^TSI(?=[-:]|$)"
      - full_name: "Modélisation des données"
        short_name: "Mod. données"
        code_name: "MD"
        class_regex: "^MD(?=[-:]|$)"
      - full_name: "Modélisation des Processus"
        short_name: "Mod. process"
        code_name: "MP"
        class_regex: "^MP(?=[-:]|$)"
      - full_name: "Système de gestion de base de données"
        short_name: "SGBD"
        code_name: "BDR"
        class_regex: "^BDR(?=[-:]|$)"
      - full_name: "Sciences Humaines et Communication"
        short_name: "SHC"
        code_name: "SHC1"
        class_regex: "^SHC1(?=[-:]|$)"
      - full_name: "Projet Personnel et Professionnel"
        short_name: "Projet P&P"
        code_name: "PPP1"
        class_regex: "^PPP1(?=[-:]|$)"
      - full_name: "Génie logiciel et modélisation UML"
        short_name: "Génie logiciel"
        code_name: "GL"
        class_regex: "^GL(?=[-:]|$)"
      - full_name: "Probabilités"
        short_name: "Probas"
        code_name: "PROB"
        class_regex: "^PROB(?=[-:]|$)"
      - full_name: "Données du Web"
        short_name: "Données Web"
        code_name: "DW"
        class_regex: "^DW(?=[-:]|$)"
      - full_name: "Développement d'applications pour les systèmes d'information"
        short_name: "DASI"
        code_name: "DASI"
        class_regex: "^DASI(?=[-:]|$)"
      - full_name: "Systèmes d'exploitation"
        short_name: "Système"
        code_name: "SYS"
        class_regex: "^SYS(?=[-:]|$)"
      - full_name: "Bases techniques pour les réseaux"
        short_name: "Réseau"
        code_name: "RE"
        class_regex: "^RE(?=[-:]|$)"
      - full_name: "Algorithmique avancée pour l'intelligence artificielle et les graphes"
        short_name: "AAIA"
        code_name: "AAIA"
        class_regex: "^AAIA(?=[-:]|$)"
      - full_name: "Projet Personnel et Professionnel"
        short_name: "Projet P&P"
        code_name: "PPP2"
        class_regex: "^PPP2(?=[-:]|$)"
      - full_name: "Sciences Humaines et Communication"
        short_name: "SHC"
        code_name: "SHC2"
        class_regex: "^SHC2(?=[-:]|$)"
      - full_name: "Ressources, Enjeux du Vivant, Énergie"
        short_name: "REVE"
        code_name: "REVE"
        class_regex: "^REVE(?=[-:]|$)"
      - full_name: "Responsabilité sociale de l'ingénieur"
        short_name: "RSI"
        code_name: "RSI"
        class_regex: "^RSI(?=[-:]|$)"
      - full_name: "Langue Vivante 1"
        short_name: "LV1"
        code_name: "LV1"
        type: "general_lang1"
        class_regex: "^LV1(?=[-:]|$)"
      - full_name: "Langue Vivante 2"
        short_name: "LV2"
        code_name: "LV2"
        type: "general_lang2"
        class_regex: "^LV2(?=[-:]|$)"
      - full_name: "Éducation Physique et Sportive"
        short_name: "EPS"
        code_name: "EPS"
        type: "general_sport"
        class_regex: "^EPS(?=[-:]|$)"
      - full_name: "Programmation Orientée Objet - C++ - Les Bases"
        short_name: "C++ Bases"
        code_name: "POO1"
        type: "support"
        class_regex: "^POO2:TA(?=[-:]|$)"
      - full_name: "Programmation Orientée Objet - C++ - Avancée"
        short_name: "C++ Avancée"
        code_name: "POO2"
        type: "support"
        class_regex: "^POO1:TA(?=[-:]|$)"
      - full_name: "Architecture des circuits numériques"
        short_name: "Archi Circuit"
        code_name: "AC"
        type: "support"
        class_regex: "^AC:TA(?=[-:]|$)"
      - full_name: "%DETAILS%"
        short_name: "%DETAILS%"
        code_name: "%DETAILS%"
        type: "support"
        class_regex: "^\\*:EDT$"

  - name: "GI"
    group_regex: "^GI(?=:.*)"
    classes:
      - full_name: "Gestion industrielle"
        short_name: "Gestion indus."
        code_name: "GIN"
        class_regex: "^GIN(?=[-:]|$)"
      - full_name: "Systèmes automatisés de production"
        short_name: "Systèmes prod."
        code_name: "APS"
        class_regex: "^APS(?=[-:]|$)"
      - full_name: "Algorithmique, programmation et modélisation en UML"
        short_name: "Algo"
        code_name: "APM"
        class_regex: "^APM(?=[-:]|$)"
      - full_name: "Recherche Opérationnelle"
        short_name: "Recherche Op."
        code_name: "ROO"
        class_regex: "^ROO(?=[-:]|$)"
      - full_name: "Probabilités, statistiques, plans d'expériences"
        short_name: "Proba"
        code_name: "PSX"
        class_regex: "^PSX(?=[-:]|$)"
      - full_name: "Résistance Des Matériaux"
        short_name: "RDM"
        code_name: "RDM"
        class_regex: "^RDM(?=[-:]|$)"
      - full_name: "Procédés de fabrication, industrialisation"
        short_name: "Procédés fab."
        code_name: "PFI"
        class_regex: "^PFI(?=[-:]|$)"
      - full_name: "Penser système et cycle de vie"
        short_name: "Cycle de vie"
        code_name: "PSC"
        class_regex: "^PSC(?=[-:]|$)"
      - full_name: "Théâtre Sciences humaines et Communication"
        short_name: "Théâtre SHC"
        code_name: "COM"
        class_regex: "^COM(?=[-:]|$)"
      - full_name: "Projet Personnel Professionnel"
        short_name: "Projet P&P"
        code_name: "PPP"
        class_regex: "^PPP(?=[-:]|$)"
      - full_name: "Langue Vivante 1"
        short_name: "LV1"
        code_name: "LV1"
        type: "general_lang1"
        class_regex: "^LV1(?=[-:]|$)"
      - full_name: "Langue Vivante 2"
        short_name: "LV2"
        code_name: "LV2"
        type: "general_lang2"
        class_regex: "^LV2(?=[-:]|$)"
      - full_name: "Éducation Physique et Sportive"
        short_name: "EPS"
        code_name: "EPS"
        type: "general_sport"
        class_regex: "^EPS(?=[-:]|$)"
      - full_name: "%DETAILS%"
        short_name: "%DETAILS%"
        code_name: "%DETAILS%"
        type: "other"
        class_regex: "^\\*:EDT$"

  - name: "HU"
    group_regex: "^HU(?=:.*)"
    classes:
      - full_name: "Allemand"
        short_name: "Allemand"
        code_name: "ALL"
        type: "lang"
        class_regex: "^ALL(?=[-:]|$)"
      - full_name: "Anglais"
        short_name: "Anglais"
        code_name: "ANG"
        type: "lang"
        class_regex: "^ANG(?=[-:]|$)"
      - full_name: "Arabe"
        short_name: "Arabe"
        code_name: "ARA"
        type: "lang"
        class_regex: "^ARA(?=[-:]|$)"
      - full_name: "Chinois"
        short_name: "Chinois"
        code_name: "CHI"
        type: "lang"
        class_regex: "^CHI(?=[-:]|$)"
      - full_name: "Espagnol"
        short_name: "Espagnol"
        code_name: "ESP"
        type: "lang"
        class_regex: "^ESP(?=[-:]|$)"
      - full_name: "Français Langue Étrangère"
        short_name: "FLE"
        code_name: "FLE"
        type: "lang"
        class_regex: "^FLE(?=[-:]|$)"
      - full_name: "Italien"
        short_name: "Italien"
        code_name: "ITA"
        type: "lang"
        class_regex: "^ITA(?=[-:]|$)"
      - full_name: "Japonais"
        short_name: "Japonais"
        code_name: "JAP"
        type: "lang"
        class_regex: "^JAP(?=[-:]|$)"
      - full_name: "Portugais"
        short_name: "Portugais"
        code_name: "POR"
        type: "lang"
        class_regex: "^POR(?=[-:]|$)"
      - full_name: "Russe"
        short_name: "Russe"
        code_name: "RUS"
        type: "lang"
        class_regex: "^RUS(?=[-:]|$)"
      - full_name: "Tandem"
        short_name: "Tandem"
        code_name: "TAN"
        type: "lang"
        class_regex: "^TAN(?=[-:]|$)"
      - full_name: "%DETAILS%"
        short_name: "%DETAILS%"
        code_name: "%DETAILS%"
        type: "other"
        class_regex: "^\\*:EDT$"

  - name: "CDS"
    group_regex: "^CDS(?=:.*)"
    classes:
      - full_name: "Éducation Physique et Sportive Adaptée"
        short_name: "EPS Adaptée"
        code_name: "EPSA"
        type: "sport"
        class_regex: "^EPSA(?=[-:]|$)"
